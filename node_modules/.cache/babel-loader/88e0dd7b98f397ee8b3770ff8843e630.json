{"ast":null,"code":"import _regeneratorRuntime from \"/Users/taras/Desktop/react-foody/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/taras/Desktop/react-foody/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/taras/Desktop/react-foody/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/taras/Desktop/react-foody/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taras/Desktop/react-foody/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/taras/Desktop/react-foody/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/taras/Desktop/react-foody/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/taras/Desktop/react-foody/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/taras/Desktop/react-foody/src/modules/menu/MenuGridContainer.js\";\nimport React, { Component } from 'react';\nimport MenuGrid from './MenuGridView';\nimport Loader from '../../components/Loader';\nimport * as API from '../../services/api';\n\nvar MenuGridContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MenuGridContainer, _Component);\n\n  function MenuGridContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MenuGridContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MenuGridContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      menu: [],\n      loading: false,\n      error: null\n    };\n\n    _this.handleDeleteItem = function (id) {\n      API.deleteMenuItem(id).then(function () {\n        _this.setState(function (state) {\n          return {\n            menu: state.menu.filter(function (item) {\n              return item.id !== id;\n            })\n          };\n        });\n      });\n    };\n\n    _this.handleAddMenuItem = function () {\n      var item = {\n        name: \"New name: Dish\",\n        price: 10,\n        image: 'https://images.pexels.com/photos/376464/pexels-photo-376464.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=320&w=180'\n      };\n      API.postMenuItem(item).then(function (newItem) {\n        _this.setState(function (state) {\n          return {\n            menu: _toConsumableArray(state.menu).concat([newItem])\n          };\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MenuGridContainer, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var menu;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context.prev = 1;\n                _context.next = 4;\n                return API.getAllMenuItems();\n\n              case 4:\n                menu = _context.sent;\n                this.setState({\n                  menu: menu,\n                  loading: false\n                });\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                this.setState({\n                  error: _context.t0,\n                  loading: false\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          menu = _this$state.menu,\n          loading = _this$state.loading,\n          error = _this$state.error;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Foody Menu\"), loading && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), error && React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Error\"), menu.length > 0 && React.createElement(MenuGrid, {\n        items: menu,\n        onDelete: this.handleDeleteItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleAddMenuItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Add New Item\"));\n    }\n  }]);\n\n  return MenuGridContainer;\n}(Component);\n\nexport { MenuGridContainer as default };","map":{"version":3,"sources":["/Users/taras/Desktop/react-foody/src/modules/menu/MenuGridContainer.js"],"names":["React","Component","MenuGrid","Loader","API","MenuGridContainer","state","menu","loading","error","handleDeleteItem","id","deleteMenuItem","then","setState","filter","item","handleAddMenuItem","name","price","image","postMenuItem","newItem","getAllMenuItems","length"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;;IAEqBC,iB;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,KAAK,EAAE;AAHD,K;;UAeRC,gB,GAAmB,UAAAC,EAAE,EAAI;AACvBP,MAAAA,GAAG,CAACQ,cAAJ,CAAmBD,EAAnB,EAAuBE,IAAvB,CAA4B,YAAM;AAClC,cAAKC,QAAL,CACG,UAAAR,KAAK;AAAA,iBAAK;AACRC,YAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWQ,MAAX,CACJ,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACL,EAAL,KAAYA,EAAhB;AAAA,aADA;AADE,WAAL;AAAA,SADR;AAKC,OAND;AAOH,K;;UACDM,iB,GAAoB,YAAM;AACxB,UAAMD,IAAI,GAAG;AACXE,QAAAA,IAAI,kBADO;AAEXC,QAAAA,KAAK,EAAE,EAFI;AAGXC,QAAAA,KAAK,EAAC;AAHK,OAAb;AAKAhB,MAAAA,GAAG,CAACiB,YAAJ,CAAiBL,IAAjB,EAAuBH,IAAvB,CAA6B,UAAAS,OAAO,EAAI;AAAG,cAAKR,QAAL,CAAc,UAAAR,KAAK;AAAA,iBAAK;AACvDC,YAAAA,IAAI,qBAAMD,KAAK,CAACC,IAAZ,UAAkBe,OAAlB;AADmD,WAAL;AAAA,SAAnB;AAG1C,OAHD;AAID,K;;;;;;;;;;;;;;;;AA3BG,qBAAKR,QAAL,CAAc;AAAEN,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;;uBAEqBJ,GAAG,CAACmB,eAAJ,E;;;AAAbhB,gBAAAA,I;AACN,qBAAKO,QAAL,CAAc;AAAEP,kBAAAA,IAAI,EAAJA,IAAF;AAAQC,kBAAAA,OAAO,EAAE;AAAjB,iBAAd;;;;;;;AAEA,qBAAKM,QAAL,CAAc;AAAEL,kBAAAA,KAAK,aAAP;AAASD,kBAAAA,OAAO,EAAE;AAAlB,iBAAd;;;;;;;;;;;;;;;;6BAuBK;AAAA,wBAC0B,KAAKF,KAD/B;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,OADP,eACOA,OADP;AAAA,UACgBC,KADhB,eACgBA,KADhB;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGD,OAAO,IAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFd,EAGGC,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHZ,EAKGF,IAAI,CAACiB,MAAL,GAAc,CAAd,IAAmB,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEjB,IAAjB;AAAuB,QAAA,QAAQ,EAAE,KAAKG,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALtB,EAME;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKO,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,CADF;AAUD;;;;EAjD4ChB,S;;SAA1BI,iB","sourcesContent":["import React, { Component } from 'react';\nimport MenuGrid from './MenuGridView';\nimport Loader from '../../components/Loader';\nimport * as API from '../../services/api';\n\nexport default class MenuGridContainer extends Component {\n  state = {\n    menu: [],\n    loading: false,\n    error: null,\n  };\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    try {\n      const menu = await API.getAllMenuItems();\n      this.setState({ menu, loading: false });\n    } catch (error) {\n      this.setState({ error, loading: false });\n    }\n  }\n  handleDeleteItem = id => {\n    API.deleteMenuItem(id).then(() => {\n    this.setState(  \n       state => ({  \n         menu: state.menu.filter( \n           item => item.id !== id),})\n        );\n    });\n};\nhandleAddMenuItem = () => {\n  const item = {\n    name: `New name: Dish`,\n    price: 10,\n    image:'https://images.pexels.com/photos/376464/pexels-photo-376464.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=320&w=180',\n  };\n  API.postMenuItem(item).then( newItem => {  this.setState(state => ({\n              menu: [...state.menu, newItem],\n        }));\n  });\n};\n  render() {\n    const { menu, loading, error } = this.state;\n\n    return (\n      <div>\n        <h1>Foody Menu</h1>\n        {loading && <Loader />}\n        {error && <h1>Error</h1>}\n\n        {menu.length > 0 && <MenuGrid items={menu} onDelete={this.handleDeleteItem} />}\n        <button type=\"button\" onClick={this.handleAddMenuItem}>Add New Item</button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}